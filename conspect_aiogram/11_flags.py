from aiogram import Bot, Dispatcher, F, BaseMiddleware
from aiogram.types import Message, ContentType, BotCommand, BotCommandScopeDefault
from aiogram.types import FSInputFile, InputMediaPhoto, InputMediaVideo
from aiogram.filters import Filter, Command, Text
import asyncio
from environs import Env
import logging #–∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
from aiogram.utils.chat_action import ChatActionSender, ChatActionMiddleware
from typing import Any, Callable, Dict, Awaitable
from aiogram.dispatcher.flags import get_flag
from aiogram.dispatcher.event.handler import HandlerObject

#–ë–ª–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏#############################
env = Env()                                    #
env.read_env('.env')                           #
TOKEN = env.str('TOKEN')                       #
ADMIN = env.int('ADMIN_ID')                    #
################################################
#–ë–ª–æ–∫ —Å —Ö—ç–Ω–¥–ª–µ—Ä–∞–º–∏ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
async def send_audio(message: Message, bot: Bot, handler: HandlerObject):
    audio = FSInputFile(path=f'media_files/audio.m4a', filename='–ö–∞–∫–æ–π-—Ç–æ –∑–≤—É–∫')
    await message.answer_audio(audio=audio)
    print(handler.flags)

async def send_document(message: Message, bot: Bot, handler: HandlerObject):
    document = FSInputFile(path=f'media_files/document.pdf')
    await message.answer_document(document=document, caption='It`s document')
    print(handler.flags)

async def send_mediagroup(message: Message, bot: Bot, handler: HandlerObject):
    photo1 = InputMediaPhoto(type='photo', media=FSInputFile(path='media_files/photo_1.jpg'), caption='MEDIAGROUP_photo1')
    photo2 = InputMediaPhoto(type='photo', media=FSInputFile(path='media_files/photo_2.PNG'), caption='MEDIAGROUP_photo2')
    video = InputMediaVideo(type='video', media=FSInputFile(path='media_files/video.mp4'), caption='MEDIAGROUP_video')
    media = [photo1, photo2, video]
    await message.answer_media_group( media)
    print(handler.flags)

async def send_photo(message: Message, bot: Bot, handler: HandlerObject):
    photo = FSInputFile(path='media_files/photo_1.jpg')
    await message.answer_photo(photo)
    print(handler.flags)

async def send_video(message: Message, bot: Bot, handler: HandlerObject):
    video = FSInputFile(r'media_files/video.mp4')
    await message.answer_video(video)
    print(handler.flags)

async def send_videonote(message: Message, bot: Bot, handler: HandlerObject):
    video_note = FSInputFile(r'media_files/video.mp4')
    await message.answer_video_note(video_note)
    print(handler.flags)

async def send_voice(message: Message, bot: Bot, handler: HandlerObject):
    voice = FSInputFile(r'media_files/audio.m4a')
    await message.answer_voice(voice=voice)
    print(handler.flags)

class ExampleChatActionMiddleware(BaseMiddleware):
    async def __call__(self,
                       handler: Callable[[Message, Dict[str, Any]], Awaitable[Any]],
                       event: Message,
                       data: Dict[str, Any]
    )-> Any:
        chat_action = get_flag(data, 'chat_action')
        if not chat_action:
            return await handler(event, data)

        async with ChatActionSender(action=chat_action, chat_id=event.chat.id):
            return await handler(event, data)

#–ë–ª–æ–∫ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π#########################
#–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ –º–µ–Ω—é –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
async def set_commands(bot: Bot):
    commands = [
        BotCommand(command='start', description='üëª –ù–∞—á–∞–ª–æ'),
        BotCommand(command='help', description='–û–ø–∏—Å–∞–Ω–∏–µ –ë–æ—Ç–∞'),
        BotCommand(command='inline', description='–ö–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤'),
        BotCommand(command='form', description='–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É'),
        BotCommand(command='end_block', description='----------------'),

        #–ë–ª–æ–∫ –∫–æ–º–∞–Ω–¥ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤
        BotCommand(command='send_photo', description='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ'),
        BotCommand(command='send_video', description='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ'),
        BotCommand(command='send_audio', description='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞—É–¥–∏–æ'),
        BotCommand(command='send_document', description='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç'),
        BotCommand(command='send_mediagroup', description='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤'),
        BotCommand(command='send_sticker', description='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä'),
        BotCommand(command='send_videonote', description='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ'),
        BotCommand(command='send_voice', description='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ'),
        #######################################
    ]

    await bot.set_my_commands(commands, BotCommandScopeDefault()) #–°–∫–æ–ø –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é|–ü–û–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –≤—Å–µ–º


async def start_bot(bot: Bot): #—Ñ—É–Ω–∫—Ü–∏—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä —Å –±–æ—Ç–æ–º
    await bot.send_message(ADMIN, text='–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')
    await set_commands(bot)

async def stop_bot(bot: Bot):
    await bot.send_message(ADMIN, text='<s>–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</s>')

async def get_start(message: Message, bot: Bot): #–§—É–Ω–∫—Ü–∏—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ —é–∑–µ—Ä –¥–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
    await message.answer('–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!')

###############################################


#–¢–µ–ª–æ –±–æ—Ç–∞#####################################
async def start():
    logging.basicConfig(level=logging.INFO, format="%(asctime)s - [%(levelname)s] - %(name)s -(%(filename)s).%(funcName)s(%(lineno)d) - %(message)s")

    bot = Bot(token=TOKEN, parse_mode="HTML")
    dp = Dispatcher()
    dp.startup.register(start_bot) #–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    dp.shutdown.register(stop_bot)

    #–ú–∏–¥–ª–≤–∞—Ä—å –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç, —á—Ç–æ –±–æ—Ç —á—Ç–æ-—Ç–æ –ø–µ—á–∞—Ç–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤
    #dp.message.middleware.register(ChatActionMiddleware())
    dp.message.middleware.register(ExampleChatActionMiddleware())

    #–ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤ –¥–ª—è–æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –º–æ–∂–µ–º –ø—Ä–∏—Ü–µ–ø–∏—Ç—å —Ñ–ª–∞–≥–∏
    dp.message.register(get_start, Command(commands=['start'])) #–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
    dp.message.register(send_audio, Command(commands=['send_audio']), flags={'typing':'typing'})
    dp.message.register(send_document, Command(commands=['send_document']), flags={'chat_action':'upload_document'})
    dp.message.register(send_mediagroup, Command(commands=['send_mediagroup']), flags={'chat_action':'upload_photo'})
    dp.message.register(send_photo, Command(commands=['send_photo']), flags={'chat_action':'upload_photo'})
    dp.message.register(send_video, Command(commands=['send_video']), flags={'chat_action':'upload_video'})
    dp.message.register(send_videonote, Command(commands=['send_videonote']), flags={'chat_action':'upload_video_note'})
    dp.message.register(send_voice, Command(commands=['send_voice']), flags={'chat_action':'upload_voice'})





    try:
        #–ù–∞—á–∞–ª–æ —Å–µ—Å—Å–∏–∏
        await dp.start_polling(bot)
    finally:
        #–ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        await bot.session.close()
###############################################


#–ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ë–æ—Ç–∞########################
if __name__ =="__main__":
    asyncio.run(start())


